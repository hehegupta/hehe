1. Family Tree and Relationships
prolog
Copy
Edit
% Facts
parent(john, mary).
parent(john, david).
parent(susan, mary).
parent(susan, david).
parent(mary, alice).
parent(mary, bob).

male(john).
male(david).
male(bob).
female(susan).
female(mary).
female(alice).

% Rules
father(X, Y) :- parent(X, Y), male(X).
mother(X, Y) :- parent(X, Y), female(X).
sibling(X, Y) :- parent(Z, X), parent(Z, Y), X \= Y.
grandparent(X, Y) :- parent(X, Z), parent(Z, Y).



2. List Concatenation
prolog
Copy
Edit
conc([], L, L).
conc([H|T], L2, [H|R]) :- conc(T, L2, R).



3. List Reverse
prolog
Copy
Edit
reverse([], []).
reverse([H|T], R) :- reverse(T, RevT), conc(RevT, [H], R).


4. Sum of Two Numbers
prolog
Copy
Edit
sum(X, Y, R) :- R is X + Y.


5. Maximum of Two Numbers
prolog
Copy
Edit
max(X, Y, X) :- X >= Y.
max(X, Y, Y) :- X < Y.



6. Factorial
prolog
Copy
Edit
factorial(0, 1).
factorial(N, F) :- N > 0, N1 is N - 1, factorial(N1, F1), F is N * F1.


7. Nth Fibonacci Number
prolog
Copy
Edit
generate_fib(0, 0).
generate_fib(1, 1).
generate_fib(N, T) :- 
    N > 1, 
    N1 is N - 1, N2 is N - 2,
    generate_fib(N1, T1), generate_fib(N2, T2),
    T is T1 + T2.


8. Power Calculation
prolog
Copy
Edit
power(_, 0, 1).
power(Num, Pow, Ans) :- 
    Pow > 0, 
    P1 is Pow - 1, 
    power(Num, P1, Temp), 
    Ans is Num * Temp.


9. Multiplication
prolog
Copy
Edit
multi(N1, N2, R) :- R is N1 * N2.


10. Membership Check
prolog
Copy
Edit
memb(X, [X|_]).
memb(X, [_|T]) :- memb(X, T).


11. Sum of List Elements
prolog
Copy
Edit
sumlist([], 0).
sumlist([H|T], S) :- sumlist(T, ST), S is H + ST.


12. Even/Odd Length
prolog
Copy
Edit
evenlength([]).
evenlength([_,_|T]) :- evenlength(T).
oddlength([_]).
oddlength([_,_|T]) :- oddlength(T).


13. Maximum in a List
prolog
Copy
Edit
maxlist([X], X).
maxlist([H|T], M) :- maxlist(T, MT), max(H, MT, M).


14. Insert at Nth Position
prolog
Copy
Edit
insert(I, 1, L, [I|L]).
insert(I, N, [H|T], [H|R]) :- N > 1, N1 is N - 1, insert(I, N1, T, R).


15. Delete Nth Element
prolog
Copy
Edit
delete(1, [_|T], T).
delete(N, [H|T], [H|R]) :- N > 1, N1 is N - 1, delete(N1, T, R).